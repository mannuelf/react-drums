apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactdrums-postgres
spec:
  selector:
    matchLabels:
      app: reactdrums-postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: reactdrums-postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: 'IfNotPresent'
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: reactdrums-postgredb
      volumes:
        - name: reactdrums-postgredb
          persistentVolumeClaim:
            claimName: reactdrums-postgres-pv-claim
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: rdrums-postgres-pv-volume
  labels:
    type: local
    app: reactdrums-postgres
spec:
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: '/mnt/data'
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: reactdrums-postgres-pv-claim
  labels:
    app: reactdrums-postgres
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: reactdrums-postgres
data:
  POSTGRES_DB: reactdrumsdb
  POSTGRES_USER: root
  POSTGRES_PASSWORD: root
---
apiVersion: v1
kind: Service
metadata:
  name: reactdrums-postgres
  labels:
    app: reactdrums-postgres
spec:
  ports:
    - name: reactdrums-postgres
      port: 5432
      nodePort: 30433
  type: NodePort
  selector:
    app: reactdrums-postgres
